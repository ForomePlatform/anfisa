version: "2.2"

services:
  jenkins:
    build:
      dockerfile: Dockerfile.jenkins
      context: .
    container_name: jenkins
    restart: always
    hostname: jenkins
    logging:
      options:
        max-size: 10m
        max-file: "3"
    volumes:
        - /var/rsm-data/opt/docker/airflow/dags:/usr/local/airflow/dags
        - /var/rsm-data/opt/docker/airflow/home/data:/usr/local/airflow/data
        - /var/rsm-data/opt/docker/jenkins:/var/jenkins_home:rw
        - /var/run/docker.sock:/var/run/docker.sock:rw
    ports:
        - "8087:8080"
    restart: always

#   zookeeper:
#     container_name: zookeeper
#     image: zookeeper:3.5
#     user: root
#     environment:
#       - ZOO_MY_ID=1
#       - ZK_SERVER_HEAP=128
#     restart: always

#   coordinator:
#     image: apache/druid:0.18.1
#     container_name: coordinator
#     user: root
#     volumes:
#       - /var/rsm-data/opt/docker/druid-data/:/opt/data/
#       - /var/rsm-data/opt/docker/coordinator:/opt/druid/var
#       - /var/rsm-data/opt/docker/airflow/home/data:/usr/local/airflow/data
#     depends_on: 
#       - zookeeper
#     ports:
#       - "8081:8081"
#     command:
#       - coordinator
#     environment:
#       - DRUID_XMS=2g 
#       - DRUID_XMX=9g 
#     env_file:
#       - environment
#     restart: always

#   broker:
#     image: apache/druid:0.18.1
#     container_name: broker
#     user: root
#     volumes:
#       - /var/rsm-data/opt/docker/broker:/opt/druid/var
#       - /var/rsm-data/opt/docker/airflow/home/data:/usr/local/airflow/data
#     depends_on: 
#       - zookeeper
#       - coordinator
#     ports:
#       - "8082:8082"
#     command:
#       - broker
#     environment:
#       - DRUID_XMS=1g
#       - DRUID_XMX=8g
#     env_file:
#       - environment
#     restart: always

#   historical:
#     image: apache/druid:0.18.1
#     container_name: historical
#     volumes:
#       - /var/rsm-data/opt/docker/druid-data/:/opt/data/
#       - /var/rsm-data/opt/docker/historical-var/:/opt/druid/var/
#       - /var/rsm-data/opt/docker/airflow/home/data:/usr/local/airflow/data
#     depends_on: 
#       - zookeeper
#       - coordinator
#     user: root
#     ports:
#       - "8083:8083"
#     command:
#       - historical
#     environment:
#       - DRUID_XMS=2g
#       - DRUID_XMX=4g
#     env_file:
#       - environment
#     restart: always

#   middlemanager:
#     image: apache/druid:0.18.1
#     container_name: middlemanager
#     user: root
#     volumes:
#       - /var/rsm-data/opt/docker/druid-data/:/opt/data/
#       - /var/rsm-data/opt/docker/middlemanager/:/opt/druid/var
#       - /var/rsm-data/opt/docker/airflow/home/data:/usr/local/airflow/data
#     depends_on: 
#       - zookeeper
#       - coordinator
#     ports:
#       - "8091:8091"
#     command:
#       - middleManager
#     environment:
#       - DRUID_XMS=256m
#       - DRUID_XMX=256m
#     env_file:
#       - environment
#     restart: always

#   router:
#     image: apache/druid:0.18.1
#     container_name: router
#     user: root
#     volumes:
#       - /var/rsm-data/opt/docker/router/:/opt/druid/var
#       - /var/rsm-data/opt/docker/airflow/home/data:/usr/local/airflow/data
#     depends_on:
#       - zookeeper
#       - coordinator
#     ports:
#       - "8888:8888"
#     command:
#       - router
#     environment:
#       - DRUID_XMS=512m
#       - DRUID_XMX=512m
#     env_file:
#       - environment
#     restart: always

# ######################### AIRFLOW ##############################
#   postgres:
#     image: postgres:12
#     container_name: postgres
#     environment:
#       - POSTGRES_USER=airflow
#       - POSTGRES_PASSWORD=a1rfl0w
#       - POSTGRES_DB=airflow
#     logging:
#       options:
#           max-size: 10m
#           max-file: "3"
#     volumes: 
#       - /var/lib/postgresql/data:/var/lib/postgresql/data
#     ports:
#       - "5432:5432"
#     restart: always

# ########################## Mongo ###############################
#   mongo:
#     image: mongo
#     container_name: mongo
#     hostname: mongo
#     # environment:
#     #   MONGO_INITDB_ROOT_USERNAME: root
#     #   MONGO_INITDB_ROOT_PASSWORD: example
#     ports:
#       - "27017:27017"
#     volumes:
#       - /var/lib/mongodb:/var/lib/mongodb:rw
#     restart: always

#   mongo-express:
#     image: mongo-express
#     container_name: mongo-express
#     restart: always
#     ports:
#       - 8095:8081
# ########################## kafka ###############################
# ########################## nginx ###############################
# ## Disabled due to using nginx on host
#   # nginx:
#   #   image: nginx:latest
#   #   container_name: nginx
#   #   ports:
#   #   - "80:80"
#   #   volumes: 
#   #     - /var/rsm-data/opt/docker/nginx/:/etc/nginx/conf.d/
#   #     - /var/rsm-data/opt/docker/htpasswd:/etc/nginx/.htpasswd
#   #   restart: always
# ######################## cAdvisor #############################
#   cadvisor:
#     image: google/cadvisor:latest
#     container_name: cadvisor
#     ports:
#     - 8090:8080
#     volumes:
#     - /:/rootfs:ro
#     - /var/run:/var/run:rw
#     - /sys:/sys:ro
#     - /var/lib/docker/:/var/lib/docker:ro
#     restart: always
# ######################### jenkins ##############################
