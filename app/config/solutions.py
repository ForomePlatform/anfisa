import os, codecs
from md5 import md5

from app.filter.condition import ConditionMaker
#===============================================
STD_WS_FILTERS = {
    "Candidates_BGM": [
        ConditionMaker.condEnum("Rules", ["Candidates_BGM"])],
    "SEQaBOO_Hearing_Loss_v_01": [
        ConditionMaker.condEnum("Rules", ["SEQaBOO_Hearing_Loss_v_01"]),
        ConditionMaker.condEnum("Rules", ["ACMG59"], "NOT")],
    "SEQaBOO_Hearing_Loss_v_02": [
        ConditionMaker.condEnum("Rules", ["SEQaBOO_Hearing_Loss_v_02"]),
        ConditionMaker.condEnum("Rules", ["ACMG59"], "NOT")],
    "SEQaBOO_Hearing_Loss_v_03": [
        ConditionMaker.condEnum("Rules", ["SEQaBOO_Hearing_Loss_v_03"]),
        ConditionMaker.condEnum("Rules", ["ACMG59"], "NOT")],
    "SEQaBOO_Hearing_Loss_v_03_5": [
        ConditionMaker.condEnum("Rules", ["SEQaBOO_Hearing_Loss_v_03"]),
        ConditionMaker.condEnum("Rules", ["HL_All_Genes"])],
    "SEQaBOO_ACMG59": [
        ConditionMaker.condEnum("Rules", ["SEQaBOO_ACMG59"]),
        ConditionMaker.condEnum("Rules", ["ACMG59"], "AND")]}

#===============================================
STD_XL_FILTERS = {}

#===============================================
def loadConfigFile(fname):
    with codecs.open(os.path.dirname(os.path.abspath(__file__)) +
            "/files/" + fname, "r", encoding = "utf-8") as inp:
        return inp.read()

def loadConfigFileSeq(fnames):
    return "\n".join([loadConfigFile(fname) for fname in fnames])

#===============================================
STD_TREE_CODE_SEQ = [
    ["Q Test", loadConfigFileSeq(["quality.pyt", "return_true.pyt"])],
    ["R Test", loadConfigFileSeq(["rare.pyt", "return_true.pyt"])],
    ["T Test", loadConfigFile("trio.pyt")],
    ["H Test", loadConfigFile("hearing_loss.pyt")],
    ["Trio Candidates", loadConfigFileSeq(
        ["quality.pyt", "rare.pyt", "trio.pyt"])],
    ["All Rare Variants", loadConfigFileSeq(
        ["quality.pyt", "rare.pyt", "return_true.pyt"])],
    ["Hearing Loss", loadConfigFileSeq(
        ["quality.pyt", "hearing_loss.pyt"])]
]

#===============================================
STD_ENUM_PANNELS = {
    "Genes": {
        "ACMG59": [
            "TMEM43",
            "DSP",
            "PKP2",
            "DSG2",
            "DSC2",
            "BRCA1",
            "BRCA2",
            "RYR2",
            "LMNA",
            "COL3A1",
            "GLA",
            "APC",
            "MUTYH",
            "APOB",
            "LDLR",
            "MYH7",
            "TPM1",
            "MYBPC3",
            "PRKAG2",
            "TNNI3",
            "MYL3",
            "MYL2",
            "ACTC1",
            "PCSK9",
            "BMPR1A",
            "SMAD4",
            "TNNT2",
            "TP53",
            "TGFBR1",
            "TGFBR2",
            "SMAD3",
            "KCNQ1",
            "KCNH1",
            "SCN5A",
            "MLH1",
            "MSH2",
            "MSH6",
            "PMS2",
            "RYR1",
            "CACNA1S",
            "FBN1",
            "MEN1",
            "RET",
            "NF2",
            "OTC",
            "SDHD",
            "SDHAF2",
            "SDHC",
            "SDHB",
            "STK11",
            "PTEN",
            "RB1",
            "MYH11",
            "ACTA2",
            "TSC1",
            "TSC2",
            "VHL",
            "WT1",
            "ATP7B"
        ],
        "All_Hearing_Loss": [
            'ABCD1',
            'ABHD12',
            'ABHD5',
            'ACOT13',
            'ACTB',
            'ACTG1',
            'ADCY1',
            'ADGRV1',
            'ADK',
            'AIFM1',
            'AK2',
            'ALMS1',
            'AMMECR1',
            'ANKH',
            'ARSB',
            'ATP13A4',
            'ATP2B2',
            'ATP2C2',
            'ATP6V1B1',
            'ATP6V1B2',
            'BCAP31',
            'BCS1L',
            'BDNF',
            'BDP1',
            'BSND',
            'BTD',
            'CABP2',
            'CACNA1C',
            'CACNA1D',
            'CATSPER2',
            'CCDC50',
            'CD151',
            'CD164',
            'CDC14A',
            'CDC42',
            'CDH23',
            'CDKN1C',
            'CEACAM16',
            'CEP78',
            'CEP152',
            'CFTR',
            'CHD7',
            'CHSY1',
            'CIB2',
            'CISD2',
            'CLCNKA',
            'CLCNKB',
            'CLDN14',
            'CLIC5',
            'CLPP',
            'CLRN1',
            'CMIP',
            'CNTNAP2',
            'COCH',
            'COL11A1',
            'COL11A2',
            'COL2A1',
            'COL4A3',
            'COL4A4',
            'COL4A5',
            'COL4A6',
            'COL9A1',
            'COL9A2',
            'COL9A3',
            'CRYL1',
            'CRYM',
            'CYP19A1',
            'DCAF17',
            'DCDC2',
            'DCDC2',
            'DIABLO',
            'DIAPH1',
            'DIAPH3',
            'DLX5',
            'DMXL2',
            'DNMT1',
            'DOCK4',
            'DRD2',
            'DSPP',
            'DYX1C1',
            'EDN3',
            'EDNRB',
            'ELMOD3',
            'EPS8',
            'EPS8L2',
            'ERCC2',
            'ERCC3',
            'ESPN',
            'ESRP1',
            'ESRRB',
            'EYA1',
            'EYA4',
            'FAM189A2',
            'FDXR',
            'FGF3',
            'FGFR1',
            'FGFR2',
            'FGFR3',
            'FKBP14',
            'FOXC1',
            'FOXF2',
            'FOXI1',
            'FOXP1',
            'FOXP2',
            'FOXRED1',
            'FRMPD4',
            'GAA',
            'GATA3',
            'GCFC2',
            'GIPC3',
            'GJA1',
            'GJB1',
            'GJB2',
            'GJB3',
            'GJB6',
            'GNPTAB',
            'GNPTG',
            'GPLD1',
            'GPSM2',
            'GRAP',
            'GREB1L',
            'GRHL2',
            'GRXCR1',
            'GRXCR2',
            'GSDME',
            'GSTP1',
            'GTPBP3',
            'HAAO',
            'HARS',
            'HARS2',
            'HGF',
            'HOMER1',
            'HOMER2',
            'HOXA2',
            'HOXB1',
            'HSD17B4',
            'HTRA2',
            'IARS2',
            'IDS',
            'IGF1',
            'ILDR1',
            'JAG1',
            'KARS',
            'KCNE1',
            'KCNJ10',
            'KCNQ1',
            'KCNQ4',
            'KIAA0319',
            'KIT',
            'KITLG',
            'LARS2',
            'LHFPL5',
            'LHX3',
            'LMX1A',
            'LOXHD1',
            'LOXL3',
            'LRP2',
            'LRTOMT',
            'MANBA',
            'MARVELD2',
            'MASP1',
            'MCM2',
            'MET',
            'MFN2',
            'MIR182',
            'MIR183',
            'MIR96',
            'MITF',
            'MPZL2',
            'MRPL19',
            'MSRB3',
            'MTAP',
            'MTO1',
            'MTRNR1',
            'MTTK',
            'MTTL1',
            'MTTS1',
            'MYH14',
            'MYH9',
            'MYO15A',
            'MYO1A',
            'MYO1C',
            'MYO1F',
            'MYO3A',
            'MYO6',
            'MYO7A',
            'NAGPA',
            'NARS2',
            'NDP',
            'NDUFA1',
            'NDUFA11',
            'NDUFAF1',
            'NDUFAF2',
            'NDUFAF3',
            'NDUFAF4',
            'NDUFAF5',
            'NDUFB11',
            'NDUFB3',
            'NDUFB9',
            'NDUFS1',
            'NDUFS2',
            'NDUFS3',
            'NDUFS4',
            'NDUFS6',
            'NDUFV1',
            'NDUFV2',
            'NF2',
            'NLRP3',
            'NOTCH2',
            'NRSN1',
            'NUBPL',
            'OPA1',
            'ORC1',
            'OSBPL2',
            'OTOA',
            'OTOF',
            'OTOG',
            'OTOGL',
            'P2RX2',
            'PAX2',
            'PAX3',
            'PCDH15',
            'PDE1C',
            'PDZD7',
            'PEX1',
            'PEX6',
            'PITX2',
            'PJVK',
            'PMP22',
            'PNPT1',
            'POLG',
            'POLR1C',
            'POLR1D',
            'POU3F4',
            'POU4F3',
            'PRPS1',
            'PTPRQ',
            'RDX',
            'RIPOR2',
            'RMND1',
            'ROBO1',
            'ROR1',
            'RPS6KA3',
            'S1PR2',
            'SALL1',
            'SALL4',
            'SEMA3E',
            'SERAC1',
            'SERPINB6',
            'SETBP1',
            'SGPL1',
            'SF3B4',
            'SIX1',
            'SIX5',
            'SLC12A1',
            'SLC17A8',
            'SLC19A2',
            'SLC22A4',
            'SLC26A4',
            'SLC26A5',
            'SLC29A3',
            'SLC33A1',
            'SLC4A11',
            'SLC52A2',
            'SLC52A3',
            'SLC9A1',
            'SLITRK6',
            'SMAD4',
            'SMPX',
            'SNAI2',
            'SOX10',
            'SOX2',
            'SPATC1L',
            'SPINK5',
            'SRPX2',
            'STRC',
            'STXBP2',
            'STXBP3',
            'SUCLA2',
            'SUCLG1',
            'SYNE4',
            'TACO1',
            'TBC1D24',
            'TBL1X',
            'TBX1',
            'TCF21',
            'TCOF1',
            'TDP2',
            'TECTA',
            'TECTB',
            'TFAP2A',
            'TFB1M',
            'TIMM8A',
            'TIMMDC1',
            'TJP2',
            'TMC1',
            'TMC2',
            'TMEM126B',
            'TMEM132E',
            'TMIE',
            'TMPRSS3',
            'TMPRSS5',
            'TNC',
            'TPRN',
            'TRIOBP',
            'TRMU',
            'TSPEAR',
            'TUBB4B',
            'TWNK',
            'TYR',
            'USH1C',
            'USH1G',
            'USH2A',
            'VCAN',
            'WBP2',
            'WFS1',
            'WHRN'
        ],
        "Reportable_Hearing_Loss": [
            'ABHD12',
            'ACTG1',
            'ADGRV1',
            'AIFM1',
            'ATP6V1B1',
            'BCS1L',
            'BSND',
            'CABP2',
            'CACNA1D',
            'CDC14A',
            'CDH23',
            'CEACAM16',
            'CEP78',
            'CHD7',
            'CIB2',
            'CISD2',
            'CLDN14',
            'CLIC5',
            'CLPP',
            'CLRN1',
            'COCH',
            'COL11A2',
            'DIAPH1',
            'DIAPH3',
            'DMXL2',
            'DNMT1',
            'DSPP',
            'EDN3',
            'EDNRB',
            'EPS8',
            'EPS8L2',
            'ESPN',
            'ESRRB',
            'EYA1',
            'EYA4',
            'GIPC3',
            'GJB2',
            'GJB6',
            'GPSM2',
            'GRHL2',
            'GRXCR1',
            'GSDME',
            'HGF',
            'HSD17B4',
            'ILDR1',
            'KCNE1',
            'KCNQ1',
            'KCNQ4',
            'LARS2',
            'LHFPL5',
            'LOXHD1',
            'LRTOMT',
            'MARVELD2',
            'MIR96',
            'MITF',
            'MSRB3',
            'MT-RNR1',
            'MT-TS1',
            'MYH14',
            'MYH9',
            'MYO15A',
            'MYO3A',
            'MYO6',
            'MYO7A',
            'OSBPL2',
            'OTOA',
            'OTOF',
            'OTOG',
            'OTOGL',
            'P2RX2',
            'PAX3',
            'PDZD7',
            'PJVK',
            'POU3F4',
            'POU4F3',
            'PRPS1',
            'PTPRQ',
            'RDX',
            'RIPOR2',
            'S1PR2',
            'SERPINB6',
            'SIX1',
            'SLC17A8',
            'SLC26A4',
            'SLC52A2',
            'SLITRK6',
            'SMPX',
            'SOX10',
            'STRC',
            'SYNE4',
            'TBC1D24',
            'TECTA',
            'TIMM8A',
            'TMC1',
            'TMIE',
            'TMPRSS3',
            'TPRN',
            'TRIOBP',
            'TUBB4B',
            'USH1C',
            'USH1G',
            'USH2A',
            'WFS1',
            'WHRN'
        ]
    }
}

STD_ENUM_PANNELS_REF = {
    unit_name: sorted([key for key, value in unit_dict.items()])
    for unit_name, unit_dict in STD_ENUM_PANNELS.items()}

#===============================================
def codeHash(tree_code):
    return md5(tree_code.strip()).hexdigest()

#===============================================
class StdTreeCodes:
    sKeys = [key for key, code in STD_TREE_CODE_SEQ]
    sCodes = {key: (code, codeHash(code))
        for key, code in STD_TREE_CODE_SEQ}
    sHashCodes = {info[1]: key for key, info in sCodes.items()}

    @classmethod
    def getKeys(cls):
        return cls.sKeys

    @classmethod
    def getCode(cls, key = None):
        if key is None:
            key = cls.sKeys[0]
        return cls.sCodes[key][0]

    @classmethod
    def getKeyByHash(cls, hash_code):
        return cls.sHashCodes.get(hash_code)

#===============================================
class Solutions:
    @staticmethod
    def report():
        global STD_ENUM_PANNELS_REF
        return {
            "codes": StdTreeCodes.getKeys(),
            "panels": STD_ENUM_PANNELS_REF}

    @staticmethod
    def getWsFilters():
        global STD_WS_FILTERS
        return STD_WS_FILTERS

    @staticmethod
    def getXlFilters():
        global STD_XL_FILTERS
        return STD_XL_FILTERS

    @staticmethod
    def getPanel(unit_name, panel_name):
        global STD_ENUM_PANNELS
        return STD_ENUM_PANNELS.get(unit_name, dict()).get(panel_name)
